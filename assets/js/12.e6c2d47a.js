(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{574:function(s,t,a){"use strict";a.r(t);var n=a(17),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"rest-framework专栏讲解-七-router"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rest-framework专栏讲解-七-router"}},[s._v("#")]),s._v(" Rest-framework专栏讲解(七)：Router")]),s._v(" "),a("p",[s._v("在开发中我们会设计好符合 Restful 风格的 API, 那框架已经帮我们提供了这些快捷方式。")]),s._v(" "),a("h3",{attrs:{id:"simplerouter"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#simplerouter"}},[s._v("#")]),s._v(" SimpleRouter")]),s._v(" "),a("p",[s._v("在我们定义好了 "),a("code",[s._v("MedusaBlogViewSet")]),s._v(" 的情况下, 我们注册 URL 的时候仅需要：")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/usr/bin/env python")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# _*_ Coding: UTF-8 _*_")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" rest_framework "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" routers\n\nrouter "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" routers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("SimpleRouter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nrouter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("register"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("r'medusa/blog'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" MedusaBlogViewSet"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nurlpatterns "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" router"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("urls\n复制代码\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("p",[a("code",[s._v("register()")]),s._v(" 有两个强制性的参数：")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("prefix")]),s._v("：用于这组路由的 URL 前缀字符串, 用于路由匹配")]),s._v(" "),a("li",[a("code",[s._v("viewset")]),s._v("：你定义的视图集")])]),s._v(" "),a("p",[s._v("如果你的视图集实现了获取列表/获取详情/新增/删除/修改的方法, 那你定义路由将会解析成这样：")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("URL 格式")]),s._v(" "),a("th",[s._v("请求方法")]),s._v(" "),a("th",[s._v("请求说明")]),s._v(" "),a("th",[s._v("视图集方法")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[a("code",[s._v("^medusa/blog$")])]),s._v(" "),a("td",[a("code",[s._v("GET")])]),s._v(" "),a("td",[s._v("获取列表")]),s._v(" "),a("td",[a("code",[s._v("list()")])])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("^medusa/blog/{pk}$")])]),s._v(" "),a("td",[a("code",[s._v("GET")])]),s._v(" "),a("td",[s._v("获取详情")]),s._v(" "),a("td",[a("code",[s._v("retrieve()")])])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("^medusa/blog$")])]),s._v(" "),a("td",[a("code",[s._v("POST")])]),s._v(" "),a("td",[s._v("新增")]),s._v(" "),a("td",[a("code",[s._v("create()")])])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("^medusa/blog/{pk}$")])]),s._v(" "),a("td",[a("code",[s._v("PUT")])]),s._v(" "),a("td",[s._v("更新")]),s._v(" "),a("td",[a("code",[s._v("update()")])])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("^medusa/blog/{pk}$")])]),s._v(" "),a("td",[a("code",[s._v("DELETE")])]),s._v(" "),a("td",[s._v("删除")]),s._v(" "),a("td",[a("code",[s._v("destroy()")])])])])]),s._v(" "),a("p",[s._v("在你的视图集没有指定 "),a("code",[s._v("queryset")]),s._v(" 属性或者自定义了 "),a("code",[s._v("get_queryset()")]),s._v(" 方法的时候, 你可能会看到这样一条错误信息：")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'basename'")]),s._v(" argument "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("not")]),s._v(" specified"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("and")]),s._v(" could "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("not")]),s._v(" automatically determine the name "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" the viewset"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" it does "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("not")]),s._v(" have a "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'.queryset'")]),s._v(" attribute"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n复制代码\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("所以你需要指定一个可选参数："),a("code",[s._v("basename")]),s._v(", 默认情况下你不需要手动指定它的值, 它是创建 URL 名称的基础属性, 一般是用你指定的 "),a("code",[s._v("queryset")]),s._v(" 属性值自动设置的。")]),s._v(" "),a("p",[s._v("默认情况下路由都需要添加 "),a("code",[s._v("/")]),s._v(" 作为路由结尾, 你也可以修改该规则, 只需要修改参数 "),a("code",[s._v("trailing_slash=False")]),s._v(" 即可：")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[s._v("router "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" SimpleRouter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("trailing_slash"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("False")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n复制代码\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("该路由器生成 URL 的方式： "),a("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2020/6/20/172d1d10a5ee9a7c?imageView2/0/w/1280/h/960/ignore-error/1",alt:"img"}})]),s._v(" "),a("h3",{attrs:{id:"include"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#include"}},[s._v("#")]),s._v(" include")]),s._v(" "),a("p",[s._v("在上面的例子中, 我们使用了 "),a("code",[s._v("urlpatterns = router.urls")]),s._v(" 的方式注册了路由对象, 我们通常会使用 "),a("code",[s._v("include")]),s._v(" 进行路由注册, 在 Django 中可能有一些我们自定义的视图, 不需要使用 "),a("code",[s._v("SimpleRouter")]),s._v(" 进行注册：")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/usr/bin/env python")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# _*_ Coding: UTF-8 _*_")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" django"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("conf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("urls "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" url\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" django"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("urls "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" include\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" rest_framework "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" routers\n\nrouter "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" routers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("SimpleRouter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nrouter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("register"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("r'medusa/blog'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" MedusaBlogViewSet"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\nurlpatterns "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 其他路由配置")]),s._v("\n    url"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("r'^'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" include"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("router"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("urls"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n复制代码\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br")])]),a("h3",{attrs:{id:"路由绑定其他操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#路由绑定其他操作"}},[s._v("#")]),s._v(" 路由绑定其他操作")]),s._v(" "),a("p",[s._v("例如你的项目安排上, 安排关于用户模块是在配置的界面, 那么你的路由可能是这样的：")]),s._v(" "),a("div",{staticClass:"language-url line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-url"}},[a("code",[a("span",{pre:!0,attrs:{class:"token path"}},[a("span",{pre:!0,attrs:{class:"token path-separator"}},[s._v("/")]),s._v("api"),a("span",{pre:!0,attrs:{class:"token path-separator"}},[s._v("/")]),s._v("v1.0"),a("span",{pre:!0,attrs:{class:"token path-separator"}},[s._v("/")]),s._v("configure"),a("span",{pre:!0,attrs:{class:"token path-separator"}},[s._v("/")]),s._v("user")]),s._v("\n复制代码\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("那我对用户的配置可能有以下几个方法处理：")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("GET")]),s._v("：获取用户详情/列表")]),s._v(" "),a("li",[a("code",[s._v("PUT")]),s._v("：修改用户信息")]),s._v(" "),a("li",[a("code",[s._v("POST")]),s._v("：新增用户信息")]),s._v(" "),a("li",[a("code",[s._v("DELETE")]),s._v("：删除用户信息")])]),s._v(" "),a("p",[s._v("问题来了, 如果我不想创建一个新的关于用户的视图类, 但是我又想增加一个修改密码的 API 接口怎么办？ 如果你从事过其他产品 API 调度工作的时候, 你可能会浮现这样类型的接口：")]),s._v(" "),a("div",{staticClass:"language-url line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-url"}},[a("code",[a("span",{pre:!0,attrs:{class:"token path"}},[a("span",{pre:!0,attrs:{class:"token path-separator"}},[s._v("/")]),s._v("api"),a("span",{pre:!0,attrs:{class:"token path-separator"}},[s._v("/")]),s._v("v1.0"),a("span",{pre:!0,attrs:{class:"token path-separator"}},[s._v("/")]),s._v("configure"),a("span",{pre:!0,attrs:{class:"token path-separator"}},[s._v("/")]),s._v("user"),a("span",{pre:!0,attrs:{class:"token path-separator"}},[s._v("/")]),s._v("1"),a("span",{pre:!0,attrs:{class:"token path-separator"}},[s._v("/")]),s._v("reset")]),s._v("\n复制代码\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("很规范的接口方式, 那你在你的 ViewSet 里怎么体现呢？")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/usr/bin/env python")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# _*_ coding: UTF-8 _*_")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" rest_framework"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("decorators "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" action\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" rest_framework"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("viewsets "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" ModelViewSet\n\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("UserViewSet")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ModelViewSet"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[s._v("@action")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("methods"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'post'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" detail"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("True")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("reset")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" request"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" pk"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("None")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n复制代码\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("p",[s._v("是的, 使用 "),a("code",[s._v("action")]),s._v(" 装饰器装饰, 并指定参数即可, 默认情况下你生成的 URL 是根据你的函数名称生成了, 你也可以通过 "),a("code",[s._v("url_name")]),s._v(" 和 "),a("code",[s._v("url_path")]),s._v(" 制定路由的后缀名称, 也可以通过 "),a("code",[s._v("permission_classes")]),s._v(" 来制定用户访问权限。")]),s._v(" "),a("h3",{attrs:{id:"defaultrouter"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#defaultrouter"}},[s._v("#")]),s._v(" DefaultRouter")]),s._v(" "),a("p",[s._v("这个路由器和 "),a("code",[s._v("SimpleRouter")]),s._v(" 很类似, 但会包含一个默认的 API 根视图, 返回一个包含所有列表视图的超链接响应数据。 当然, 该路由的路径也会使用 "),a("code",[s._v("/")]),s._v(" 结尾, 你可以用 "),a("code",[s._v("trailing_slash=False")]),s._v(" 来弃用该规则：")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[s._v("router "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" DefaultRouter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("trailing_slash"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("False")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n复制代码\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("该路由生成 URL 的方式： "),a("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2020/6/20/172d1d221056b008?imageView2/0/w/1280/h/960/ignore-error/1",alt:"img"}})]),s._v(" "),a("h3",{attrs:{id:"自定义路由器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自定义路由器"}},[s._v("#")]),s._v(" 自定义路由器")]),s._v(" "),a("p",[s._v("其实在开发中这不是你使用路由器的最好方式, 但是在你需要自定义 URL 格式的时候使用这个方式将会变得很有效, 而实现自定义路由是将现有路由作为子类之一, 其 "),a("code",[s._v(".routes")]),s._v(" 属性是 "),a("code",[s._v("Route")]),s._v(" 的命名元组的列表数据, 功能是用于模板化将映射到每个视图集的 URL 模式。 "),a("code",[s._v("Route")]),s._v(" 命名元祖的参数有：")]),s._v(" "),a("ul",[a("li",[a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("url\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("：代表需要路由的 URL 字符串, 你可能需要这样字符串")]),s._v(" "),a("ul",[a("li",[a("code",[s._v('"{prefix}"')]),s._v("：用于这组路由器的前缀字符串")]),s._v(" "),a("li",[a("code",[s._v('"{lookup}"')]),s._v("：用于单个实例匹配的字符串, 如ID")]),s._v(" "),a("li",[a("code",[s._v('"{trailing_slash}"')]),s._v("：根据 "),a("code",[s._v("trailing_slash")]),s._v(" 参数制定结尾字符")])])]),s._v(" "),a("li",[a("p",[a("code",[s._v("mapping")]),s._v("：HTTP 方法名称到视图方法的映射")])]),s._v(" "),a("li",[a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("name\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("reverse\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("呼叫用使用的 URL 名称,你可能需要这样的字符串")]),s._v(" "),a("ul",[a("li",[a("code",[s._v('"{basename}"')]),s._v("：用于创建 URL 名称的基础字符")])])]),s._v(" "),a("li",[a("p",[a("code",[s._v("initkwargs")]),s._v("：实例化视图需要的参数字典")])])]),s._v(" "),a("p",[s._v("其实以上文字内容是官方文档的描述内容加上我自己的理解装饰了一下, 但是看到这几行字的描述信息, 确实是不知道它的功能到底怎么样定义, 刚好看到某位大佬的博客, 参考并实践了一下：")]),s._v(" "),a("blockquote",[a("p",[s._v("附参考的博客地址："),a("a",{attrs:{href:"https://www.cnblogs.com/liubiao/p/6567565.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("www.cnblogs.com/liubiao/p/6…"),a("OutboundLink")],1)])]),s._v(" "),a("h3",{attrs:{id:"自定义解析路线"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自定义解析路线"}},[s._v("#")]),s._v(" 自定义解析路线")]),s._v(" "),a("p",[s._v("在使用 "),a("code",[s._v("@action")]),s._v(" 的时候你也可以自定义路由方式, "),a("code",[s._v(".routes")]),s._v(" 的列表是包含 "),a("code",[s._v("DynamicRoute")]),s._v(" 命名的元组, 将 "),a("code",[s._v("detail")]),s._v(" 参数设置为适用于基于列表的路由和基于详细信息的路由, "),a("code",[s._v("DynamicRoute")]),s._v(" 除了 "),a("code",[s._v("detail")]),s._v(" 参数：")]),s._v(" "),a("ul",[a("li",[a("p",[a("code",[s._v("url")]),s._v("：一个代表路由 URL 的字符串, 可能会包含和 "),a("code",[s._v("Route")]),s._v(" 相同格式的字符串, 并接受一个 "),a("code",[s._v('"{url_path}"')]),s._v(" 格式的字符串")])]),s._v(" "),a("li",[a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("name\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("reverse\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("呼叫中使用的 URL 名称, 你可能需要以下格式的字符串：")]),s._v(" "),a("ul",[a("li",[a("code",[s._v('"{basename}"')]),s._v("：用于创建 URL 的名称基础")]),s._v(" "),a("li",[a("code",[s._v('"{url_name}"')]),s._v("：提供给 "),a("code",[s._v("@action")]),s._v(" 的 "),a("code",[s._v("url_name")])])])]),s._v(" "),a("li",[a("p",[a("code",[s._v("initkwargs")]),s._v("：实例化试图需要的参数字典")])])]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/usr/bin/env python")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# _*_ coding: UTF-8 _*_")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" rest_framework"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("routers "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" Route"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" DynamicRoute"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" SimpleRouter\n\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("CustomReadOnlyRouter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("SimpleRouter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[s._v('"""\n    A router for read-only APIs, which doesn\'t use trailing slashes.\n    """')]),s._v("\n    routes "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n        Route"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n            url"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("r'^{prefix}$'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n            mapping"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'get'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'list'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n            name"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{basename}-list'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n            detail"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("False")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n            initkwargs"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'suffix'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'List'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        Route"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n            url"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("r'^{prefix}/{lookup}$'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n            mapping"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'get'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'retrieve'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n            name"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{basename}-detail'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n            detail"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("True")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n            initkwargs"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'suffix'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Detail'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        DynamicRoute"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n            url"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("r'^{prefix}/{lookup}/{url_path}$'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n            name"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{basename}-{url_name}'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n            detail"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("True")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n            initkwargs"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br")])])])}),[],!1,null,null,null);t.default=e.exports}}]);