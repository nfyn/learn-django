(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{582:function(t,a,s){"use strict";s.r(a);var e=s(17),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"rest-framework专栏讲解-五-request"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#rest-framework专栏讲解-五-request"}},[t._v("#")]),t._v(" Rest-framework专栏讲解(五)：Request")]),t._v(" "),s("p",[t._v("框架的 "),s("code",[t._v("request")]),t._v(" 给予了很标准的属性, 并拓展了标准 "),s("code",[t._v("HTTPRequest")]),t._v(" 对象, 你会在开发中很方便的使用它。")]),t._v(" "),s("h3",{attrs:{id:"data"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#data"}},[t._v("#")]),t._v(" .data")]),t._v(" "),s("p",[t._v("在 "),s("code",[t._v("request.data")]),t._v(" 中你可以很方便的获取客户端传递给你的 json 数据或者表单提交, 不需要像 "),s("code",[t._v("request.POST.get()")]),t._v(" 一样很麻烦的操作, 并且能解析文件传输。")]),t._v(" "),s("div",{staticClass:"language-python line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("update")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" request"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("kwargs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" request"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'params'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n复制代码\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("h3",{attrs:{id:"query-params"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#query-params"}},[t._v("#")]),t._v(" .query_params")]),t._v(" "),s("p",[t._v("在 "),s("code",[t._v("GET")]),t._v(" 请求中, "),s("code",[t._v("query_params")]),t._v(" 的命名方式才更加凸显传参的方式, 当然, "),s("code",[t._v("request.query_params.get('params')")]),t._v(" 和 "),s("code",[t._v("request.GET.get('params')")]),t._v(" 是等价的。")]),t._v(" "),s("h3",{attrs:{id:"user"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#user"}},[t._v("#")]),t._v(" .user")]),t._v(" "),s("p",[t._v("在你已认证的情况下, 访问该属性得到的是你用户模型的一个实例对象, 你可以通过 "),s("code",[t._v("request.user.id")]),t._v(" 的方式获取用户 ID 属性, 但在未验证, 或者未通过验证的情况下该属性返回的是 "),s("code",[t._v("django.contrib.auth.models.AnonymousUser")]),t._v(" 的一个实例对象。")]),t._v(" "),s("h3",{attrs:{id:"auth"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#auth"}},[t._v("#")]),t._v(" .auth")]),t._v(" "),s("p",[t._v("这个属性在验证通过的情况下返回的是验证用户的令牌实例, 否则则是 "),s("code",[t._v("None")]),t._v(", 他的值取决于身份验证的策略。")]),t._v(" "),s("h3",{attrs:{id:"method"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#method"}},[t._v("#")]),t._v(" .method")]),t._v(" "),s("p",[t._v("该属性能返回请求方式的大写字符串, 如 "),s("code",[t._v("GET")]),t._v("。")]),t._v(" "),s("p",[t._v("在请求中, 如果不需要重写框架的方法, 或者实现自定义返回数据、校验等, 这些属性一般是不会被使用到的。")])])}),[],!1,null,null,null);a.default=r.exports}}]);